#! /bin/tcsh

# Get a tar file prepared with prepLig4Docking.csh and dock it into a receptor stored in its directory
set ligfile=none
set recdir=none
set s4mple=$GACONF/$MACHTYPE/PLANTS1.2_64bit
set start=1
set speed=speed1  #SPEED spec for PLANTS
set scof=chemplp  #Scoring function to use
set dock=plants
set le=0.35
source $GACONF/argproc.cmd
if ($?workdir) then
  mkdir -p $workdir
  if (-d $workdir) then
    cd $workdir
  else
    echo FATAL - $workdir is not an acceptable name for a temporary directory
    exit
  endif
endif

if ($?basedir) then
  if (-d $basedir) then
    echo A base directory has been specified: will move results to $basedir
  else
    echo FATAL - specified base directory $basedir does not exist
    if ($?workdir) rm -r $workdir
    exit
  endif
endif


if (!(-e $ligfile)) then
  echo "FATAL: no such input file $ligfile. Use ligfile=existing_filename"
  echo "Beware, if you specified a working directory using workdir=path, you must make sure that ligfile is specified with its absolute path"
  if ($?workdir) rm -r $workdir
  exit
endif

if (!(-x $s4mple)) then
  echo FATAL: the executable tool  $s4mple, does not exist or cannot be executed.
  echo Check it out, or specify a working tool using s4mple=sampling_tool_name_with_path on command line
  if ($?workdir) rm -r $workdir
  exit
endif

if (!(-d $recdir)) then
  echo FATAL - need to specify a valid directory in which the receptor resides. Use recdir=site_directory on command line.
  if ($?workdir) rm -r $workdir
  exit
endif
if (-e $recdir/ref.mol2) then
  set mode=mol2
  @ nsatoms = `awk '$1=="@<TRIPOS>MOLECULE" {getline;getline;print $1}' $recdir/ref.mol2`
else
  echo FATAL - receptor directory $recdir does not contain required ref.mol2
  if ($?workdir) rm -r $workdir
  exit
endif
if (!(-e $recdir/bindingsite.def)) then
  echo FATAL - you need the PLANTS definition file bindingsite.def in $recdir. It can be generated by calling $s4mple --mode bind ligand.mol2 RADIUS $recdir/ref.mol2
  exit
endif

@ nmax = `cat $ligfile|wc -l`
if (!($?end)) then
  # last ligand to dock
  @ end = $nmax
endif
if ($end>$nmax) then
  @ end = $nmax
endif

set resfile=$PWD/$ligfile:r.dockscore
touch $resfile
@ k = $start - 1
while ($k<$end)
  @ k ++
  if (-e $dock$k) rm -r $dock$k
  mkdir $dock$k
  awk -v k=$k 'NR==k {print $1}' $ligfile|java Utils/PrepLigFull -o $dock$k/ref.sdf
  @ natoms = `$CHEMINFO_BIN/generatemd c $dock$k/ref.sdf -k Heavy | awk '$2==1*$2 {print 1*$2}'`
  @ nrotbonds = `awk -v k=$k 'NR==k {print $1}' $ligfile|$CHEMINFO_BIN/cxcalc -N ih rotatablebondcount`
  $CHEMINFO_BIN/molconvert mol2 $dock$k/ref.sdf > $dock$k/refC.mol2
  $GACONF/$MACHTYPE/SPORES_64bit --mode settypes $dock$k/refC.mol2 $dock$k/spores.mol2 |& grep -i err > $dock$k/log.N$k
  awk '$1==int($1) && $3==1*$3 && $4==1*$4 && $5==1*$5 {print $6}' $dock$k/spores.mol2 > $dock$k/types
  awk -v tfile=$dock$k/types 'BEGIN {while(getline<tfile>0) {n++;t[n]=$1}} {if ($1==int($1) && $3==1*$3 && $4==1*$4 && $5==1*$5) {k++;$6=t[k]};print $0}' $dock$k/refC.mol2 > $dock$k/ligand.mol2
  cp $recdir/ref.mol2 $dock$k/protein.mol2
  cat $recdir/bindingsite.def > $dock$k/cmd
  cd $dock$k
  echo search_speed $speed >> cmd #SPEED spec for PLANTS
  echo scoring_function $scof >> cmd  #Scoring function to use
  echo protein_file protein.mol2 >> cmd
  echo ligand_file ligand.mol2 >> cmd
  echo output_dir results >> cmd
  $s4mple  --mode screen cmd >& /dev/null
  awk -v n=$natoms -v b=$nrotbonds -v le=$le '$1=="rank" && $2==1 && $3=="score" && $4==1*$4 {print $4,$4/n,$4/exp(le*log(n)),$4/(b+1),$4/sqrt(n*b+n)}' results/ligand.log > score
  if (-z score) then
    echo 9999 9999 9999 9999 9999 > score
  endif
  cat score >> $resfile
  cd ..
  if ($?clean) then
    rm -r $dock$k
  else if ($?basedir) then
    mv $dock$k $basedir
  endif
end

if (($?workdir) && ($?basedir)) then
  rm -r $workdir
endif

#
